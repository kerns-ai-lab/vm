# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # Capture the Vagrant command
  v_arg = ARGV[0]

  # Give vm definition a handle
  config.vm.define "kernsai"

  # Build upon base box from Vagrant repository
  config.vm.box = "ubuntu/xenial64"

  # Uncomment public network and populate with your bridged IP
  # config.vm.network "public_network", ip: "< YOUR IP >"
  # config.vm.network "private_network", type: "dhcp"

  # Mount shared folders required for initialization
  config.vm.synced_folder "shared", "/home/vagrant/shared"
  
  # We don't want to insert a vagrant key into the box
  config.ssh.insert_key = false

  # Define variables
  git_user = ""
  git_pass = ""

  # Only run secrets prompts on first up command
  if Dir.glob("#{File.dirname(__FILE__)}/.vagrant/machines/kernsai/virtualbox/*").empty? and v_arg == 'up'
	# Prompt for user secrets. (Hide password and encode)
	print "Enter Github User: "
	git_user = URI.escape(STDIN.gets.chomp)
	print "Enter Github Password: "
	git_pass = URI.escape(STDIN.noecho(&:gets).chomp)
	print "\n"
  end

  config.vm.provider "virtualbox" do |vb|
    # GUI
    vb.gui = true
    # Customize the amount of memory on the VM:
    vb.memory = "4096"
    # Support working when on 3DS VPN (Required for adapter provisioning on VPN)
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    # Enable multi-core
    vb.cpus = 4
    vb.customize ["modifyvm", :id, "--ioapic", "on"]
    vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
  end

  config.vm.provision "shell", path: "./scripts/provision.sh", args: [git_user.to_s, git_pass.to_s]
     
  config.vm.provision "ansible_local" do |ansible|
    ansible.playbook = "provision_matei3.yml"
    ansible.provisioning_path = "/home/vagrant/ansible"
    # True by default. Set explicitly as this is intended
    ansible.install = true  
    ansible.install_mode = "pip"
    ansible.version = "2.6.7"
  end 

end
